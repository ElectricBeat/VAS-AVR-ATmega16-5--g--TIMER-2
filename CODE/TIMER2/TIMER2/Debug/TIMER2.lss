
TIMER2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000098  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000ec  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000000ec  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000011c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000158  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000000a6  00000000  00000000  00000180  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000074  00000000  00000000  00000226  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000000f7  00000000  00000000  0000029a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00000394  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000147  00000000  00000000  000003c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000018  00000000  00000000  0000050f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 41 00 	call	0x82	; 0x82 <main>
  64:	0c 94 4a 00 	jmp	0x94	; 0x94 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <T2delay>:
	}
}

void T2delay()
{
	TCCR2 = (1<<CS22) | (1<<CS21) | (1<<CS20);	/* Timer2, normal mode, /1024 prescalar */
  6c:	87 e0       	ldi	r24, 0x07	; 7
  6e:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0XF6;					/* Load TCNT2, count for 10ms */
  70:	86 ef       	ldi	r24, 0xF6	; 246
  72:	84 bd       	out	0x24, r24	; 36
	while((TIFR&0x40)==0);			/* Wait for TOV2 to roll over */
  74:	08 b6       	in	r0, 0x38	; 56
  76:	06 fe       	sbrs	r0, 6
  78:	fd cf       	rjmp	.-6      	; 0x74 <T2delay+0x8>
	TCCR2 = 0;
  7a:	15 bc       	out	0x25, r1	; 37
	TIFR = 0x40;					/* Clear TOV2 flag */
  7c:	80 e4       	ldi	r24, 0x40	; 64
  7e:	88 bf       	out	0x38, r24	; 56
  80:	08 95       	ret

00000082 <main>:

void T2delay();

int main(void)
{
	DDRB	=	0xFF;				/* PORTB as output */
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	87 bb       	out	0x17, r24	; 23
	PORTB	=	0x00;
  86:	18 ba       	out	0x18, r1	; 24

	while(1)  						/* Repeat forever */
	{
		PORTB	=	~PORTB;
  88:	88 b3       	in	r24, 0x18	; 24
  8a:	80 95       	com	r24
  8c:	88 bb       	out	0x18, r24	; 24
		T2delay();
  8e:	0e 94 36 00 	call	0x6c	; 0x6c <T2delay>
	}
  92:	fa cf       	rjmp	.-12     	; 0x88 <main+0x6>

00000094 <_exit>:
  94:	f8 94       	cli

00000096 <__stop_program>:
  96:	ff cf       	rjmp	.-2      	; 0x96 <__stop_program>
